// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// 根据环境决定是否使用代理
const isDevelopment = import.meta.env.DEV;

// 动态获取当前端口并构建代理URL
const getCurrentPort = () => {
  if (typeof window !== 'undefined') {
    return window.location.port || '8080';
  }
  return '8080';
};

const SUPABASE_URL = isDevelopment 
  ? `http://localhost:${getCurrentPort()}/supabase-proxy`  // 开发环境使用动态端口代理
  : "https://ooyklqqgnphynyrziqyh.supabase.co";  // 生产环境直接连接

const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9veWtscXFnbnBoeW55cnppcXloIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM1NzkyNDgsImV4cCI6MjA1OTE1NTI0OH0.d4Awen-9PnzlZTP51TpjjBkhrI3Dog4YELcbGlQs8jE";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

console.log(`Using Supabase URL: ${SUPABASE_URL} ${isDevelopment ? '(via proxy)' : '(direct connection)'}`);

// 客户端配置
export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      autoRefreshToken: true,
      persistSession: true,
      detectSessionInUrl: true
    },
    global: {
      headers: {
        'x-application-name': 'create-connect-lms',
        // 开发环境下的额外配置
        ...(isDevelopment && {
          'Cache-Control': 'no-cache',
          'Pragma': 'no-cache'
        })
      },
      // 开发环境下增加超时时间
      fetch: (url: RequestInfo | URL, options: RequestInit = {}) => {
        const timeoutId = setTimeout(() => {
          console.warn(`Request timeout for ${url}`);
        }, isDevelopment ? 30000 : 10000);
        
        return fetch(url, {
          ...options,
          signal: AbortSignal.timeout(isDevelopment ? 30000 : 10000)
        }).finally(() => {
          clearTimeout(timeoutId);
        });
      }
    },
    db: {
      schema: 'public'
    },
    // 减少实时连接的事件频率
    realtime: {
      params: {
        eventsPerSecond: 10
      }
    }
  }
);